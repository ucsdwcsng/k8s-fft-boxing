apiVersion: batch/v1
kind: Job
metadata:
  name: fft-boxing.{{ required "Missing a required value jobParam.name" .Values.jobParam.name | lower }}
  {{- if .Values.jobParam.description }}
  annotations:
    jobDescription: {{ .Values.jobParam.description | quote }}
  {{- end }}
  labels:
    {{- include "fft_boxing.labels" . | nindent 4 }}
spec: 
  template:
    spec:
      initContainers:
      - image: wbitt/network-multitool:latest
        name: setup-netintf-mac
        imagePullPolicy: Always
        command: ["ifconfig"]
        args: ["eth0", "hw", "ether", "$(MAC_ADDRESS)"]
        env:
        - name: MAC_ADDRESS
          value: {{ .Values.matlabLicenseMAC | quote }}
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
      containers:
      - image: {{ .Values.image.registry }}/fft_boxing:v{{ .Chart.AppVersion }}
        name: matlab
        imagePullPolicy: IfNotPresent
        command: ["matlab"]
        args: ["-batch", "fft_boxing"]
        env:
        - name: BASEPATH
          value: /storage/{{ required "Missing a required parameter jobParam.dataDir" .Values.jobParam.dataDir }}
        - name: TIME_SLICE
          value: {{ .Values.jobParam.timeSlice | quote }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
          - mountPath: /storage
            name: scisrs-storage
      {{- if .Values.requiredGPU }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                  {{- toYaml .Values.requiredGPU | nindent 16 }}
      {{- end}}
      restartPolicy: {{ .Values.jobParam.restartPolicy }}

      volumes:
      - name: scisrs-storage
        persistentVolumeClaim:
          claimName: {{ .Values.dataVolumeName }}